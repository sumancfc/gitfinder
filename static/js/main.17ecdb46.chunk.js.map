{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/repos/ReposItem.js","components/repos/Repos.js","components/layout/Spinner.js","context/github/githubContext.js","components/users/User.js","context/alert/alertContext.js","components/layout/Alert.js","components/users/UserItem.js","components/users/Users.js","components/users/Search.js","components/pages/Home.js","components/pages/About.js","context/github/githubReducer.js","context/types.js","context/github/githubState.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","ReposItem","repo","href","html_url","name","Repos","repos","map","key","id","Spinner","src","spinner","alt","style","width","margin","display","githubContext","createContext","User","match","useContext","GithubContext","getUser","loading","user","getUserRepos","useEffect","params","login","company","avatar_url","location","bio","blog","followers","following","public_repos","public_gists","hireable","alertContext","Alert","alert","AlertContext","type","msg","UserItem","Users","users","gridTemplateColumns","gridGap","Search","showAlert","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","value","onChange","target","placeholder","length","onClick","clearUsers","Home","About","state","action","payload","GithubState","props","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","process","res","data","items","username","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,qC,mJCIrCC,EAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACE,yBAAKC,UAAU,qBACb,4BACE,uBAAGA,UAAWF,IACbC,GAEH,4BACE,4BACE,kBAAC,IAAD,CAAME,GAAG,cAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,aAOVJ,EAAOK,aAAe,CACpBH,MAAO,YACPD,KAAM,cAQOD,QClBAM,EAZG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,yBAAKJ,UAAU,QACb,4BAAI,uBAAGK,KAAMD,EAAKE,UAAWF,EAAKG,SCOzBC,EATD,SAAC,GACb,OAD2B,EAAZC,MACFC,KAAI,SAACN,GAAD,OAAU,kBAAC,EAAD,CAAWO,IAAKP,EAAKQ,GAAIR,KAAMA,Q,iBCQ7CS,EAVE,kBACf,kBAAC,WAAD,KACE,yBACEC,IAAKC,IACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,aCJzCC,EAFOC,0BCoGPC,EAhGF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACRH,EAAgBI,qBAAWC,GACzBC,EAAgDN,EAAhDM,QAASC,EAAuCP,EAAvCO,QAASC,EAA8BR,EAA9BQ,KAAMpB,EAAwBY,EAAxBZ,MAAOqB,EAAiBT,EAAjBS,aACvCC,qBAAU,WACRJ,EAAQH,EAAMQ,OAAOC,OACrBH,EAAaN,EAAMQ,OAAOC,SAEzB,IAPuB,IAUxB1B,EAaEsB,EAbFtB,KACA2B,EAYEL,EAZFK,QACAC,EAWEN,EAXFM,WACAC,EAUEP,EAVFO,SACAC,EASER,EATFQ,IACAC,EAQET,EARFS,KACAL,EAOEJ,EAPFI,MACA3B,EAMEuB,EANFvB,SACAiC,EAKEV,EALFU,UACAC,EAIEX,EAJFW,UACAC,EAGEZ,EAHFY,aACAC,EAEEb,EAFFa,aACAC,EACEd,EADFc,SAGF,OAAIf,EAAgB,kBAAC,EAAD,MAElB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM3B,GAAG,aAAaD,UAAU,iBAAhC,kBAIA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEc,IAAKqB,EACLnC,UAAU,YACVgB,IAAI,SACJC,MAAO,CAAEC,MAAO,WAElB,4BAAKX,GACL,wCAAc6B,GACd,wCAAc,IACbO,EACC,uBAAG3C,UAAU,6BAEb,uBAAGA,UAAU,oCAGjB,6BACGqC,GACC,kBAAC,WAAD,KACE,mCACCA,GAGL,6BACA,uBAAGhC,KAAMC,EAAUN,UAAU,qBAA7B,aAGA,4BACE,4BACGiC,GACC,kBAAC,WAAD,KACE,4CADF,KAC8BA,IAIlC,4BACGC,GACC,kBAAC,WAAD,KACE,2CADF,KAC6BA,IAIjC,4BACGI,GACC,kBAAC,WAAD,KACE,2CADF,KAC6BA,OAOvC,yBAAKtC,UAAU,oBACb,yBAAKA,UAAU,uBAAf,eAAkDuC,GAClD,yBAAKvC,UAAU,uBAAf,eAAkDwC,GAClD,yBAAKxC,UAAU,qBAAf,kBAAmDyC,GACnD,yBAAKzC,UAAU,oBAAf,kBAAkD0C,IAEpD,kBAAC,EAAD,CAAOjC,MAAOA,MC7FLmC,EAFMtB,0BCYNuB,EAXD,WACZ,IAEQC,EAFarB,qBAAWsB,GAExBD,MACR,OACY,OAAVA,GACE,yBAAK9C,UAAS,sBAAiB8C,EAAME,OAASF,EAAMG,MCkB3CC,EAvBE,SAAC,GAA+C,IAAD,IAA5CrB,KAAQI,EAAoC,EAApCA,MAAiBE,GAAmB,EAA7B7B,SAA6B,EAAnB6B,YAC3C,OACE,yBAAKnC,UAAU,oBACb,yBACEc,IAAKqB,EACLnB,IAAI,YACJhB,UAAU,YACViB,MAAO,CAAEC,MAAO,UAElB,4BAAKe,GACL,6BACE,kBAAC,IAAD,CAAMhC,GAAE,gBAAWgC,GAASjC,UAAU,4BAAtC,gBCmBOmD,EA5BD,WACZ,IAAM9B,EAAgBI,qBAAWC,GAEzBE,EAAmBP,EAAnBO,QAASwB,EAAU/B,EAAV+B,MAOjB,OAAIxB,EACK,kBAAC,EAAD,MAGL,yBAAKX,MAVS,CAChBG,QAAS,OACTiC,oBAAqB,gBACrBC,QAAS,SAQJF,EAAM1C,KAAI,SAACmB,GAAD,OACT,kBAAC,EAAD,CAAUlB,IAAKkB,EAAKjB,GAAIiB,KAAMA,S,QC0BzB0B,EA5CA,SAAC,GAAkB,EAAhBC,UAAiB,IAC3BnC,EAAgBI,qBAAWC,GAC3BkB,EAAenB,qBAAWsB,GAFA,EAIRU,mBAAS,IAJD,mBAIzBC,EAJyB,KAInBC,EAJmB,KAkBhC,OACE,6BACE,0BAAMC,SAdO,SAACC,GAChBA,EAAEC,iBACW,KAATJ,EACFd,EAAamB,SAAS,qBAAsB,UAE5C1C,EAAc2C,YAAYN,GAC1BC,EAAQ,MAQkB3D,UAAU,QAClC,2BACEgD,KAAK,OACLzC,KAAK,OACL0D,MAAOP,EACPQ,SATa,SAACL,GAAD,OAAOF,EAAQE,EAAEM,OAAOF,QAUrCG,YAAY,gBAEd,4BAAQpB,KAAK,SAAShD,UAAU,0BAAhC,cAIDqB,EAAc+B,MAAMiB,OAAS,GAC5B,4BACErE,UAAU,gCACVsE,QAASjD,EAAckD,YAFzB,WCxBOC,EATF,WACX,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCESC,EARA,WACX,OACI,6BACQ,wBAAIzE,UAAU,eAAd,wB,iDCGD,WAAC0E,EAAOC,GACrB,OAAQA,EAAO3B,MACb,ICVwB,eDWtB,OAAO,2BACF0B,GADL,IAEEtB,MAAOuB,EAAOC,QACdhD,SAAS,IAGb,IChBoB,WDiBlB,OAAO,2BACF8C,GADL,IAEE7C,KAAM8C,EAAOC,QACbhD,SAAS,IAGb,ICrBqB,YDsBnB,OAAO,2BACF8C,GADL,IAEEjE,MAAOkE,EAAOC,QACdhD,SAAS,IAGb,IC7BuB,cD8BrB,OAAO,2BACF8C,GADL,IAEEtB,MAAO,GACPxB,SAAS,IAGb,IClCuB,cDmCrB,OAAO,2BACF8C,GADL,IAEE9C,SAAS,IAGb,QACE,OAAO8C,IE6CEG,EA9EK,SAACC,GACnB,IAD6B,EAQHC,qBAAWC,EAPhB,CACnB5B,MAAO,GACPvB,KAAM,GACNpB,MAAO,GACPmB,SAAS,IALkB,mBAQtB8C,EARsB,KAQfO,EARe,KAWvBjB,EAAW,uCAAG,WAAON,GAAP,eAAAwB,EAAA,6DAClBC,IADkB,SAEAC,IAAMC,IAAN,gDACyB3B,EADzB,sBAC2C4B,uBAD3C,0BAC4FA,6CAH5F,OAEZC,EAFY,OAMlBN,EAAS,CACPjC,KD9BsB,eC+BtB4B,QAASW,EAAIC,KAAKC,QARF,2CAAH,sDAaX9D,EAAO,uCAAG,WAAO+D,GAAP,eAAAR,EAAA,6DACdC,IADc,SAGIC,IAAMC,IAAN,uCACgBK,EADhB,sBACsCJ,uBADtC,0BACuFA,6CAJ3F,OAGRC,EAHQ,OAOdN,EAAS,CACPjC,KD3CkB,WC4ClB4B,QAASW,EAAIC,OATD,2CAAH,sDAcP1D,EAAY,uCAAG,WAAO4D,GAAP,eAAAR,EAAA,6DACnBC,IADmB,SAGDC,IAAMC,IAAN,uCACgBK,EADhB,wDACwEJ,uBADxE,0BACyHA,6CAJxH,OAGbC,EAHa,OAOnBN,EAAS,CACPjC,KDvDmB,YCwDnB4B,QAASW,EAAIC,OATI,2CAAH,sDAoBZL,EAAa,kBAAMF,EAAS,CAAEjC,KDlEX,iBCoEzB,OACE,kBAAC,EAAc2C,SAAf,CACE1B,MAAO,CACLb,MAAOsB,EAAMtB,MACbvB,KAAM6C,EAAM7C,KACZpB,MAAOiE,EAAMjE,MACbmB,QAAS8C,EAAM9C,QACfoC,cACArC,UACAG,eACAyC,WAlBa,kBACjBU,EAAS,CACPjC,KDhEqB,mBCmFpB8B,EAAMc,WCnFE,WAAClB,EAAOC,GACrB,OAAQA,EAAO3B,MACb,IFCqB,YEAnB,OAAO2B,EAAOC,QAChB,IFAwB,eECtB,OAAO,KACT,QACE,OAAOF,ICuBEmB,EA3BI,SAACf,GAClB,IAD4B,EAGFC,qBAAWe,EAFhB,MADO,mBAGrBpB,EAHqB,KAGdO,EAHc,KAe5B,OACE,kBAAC,EAAaU,SAAd,CACE1B,MAAO,CACLnB,MAAO4B,EACPX,SAbW,SAACd,EAAKD,GACrBiC,EAAS,CACPjC,KHRmB,YGSnB4B,QAAS,CAAE3B,MAAKD,UAGlB+C,YAAW,kBAAMd,EAAS,CAAEjC,KHXJ,mBGW2B,QAUhD8B,EAAMc,WCQEI,G,MAtBH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKhG,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,aAAaC,UAAW3B,IAC1C,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,SAASC,UAAW1B,IACtC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,eAAeC,UAAW5E,YCrB5D6E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.17ecdb46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8e505e42.gif\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className={icon}></i>\r\n        {title}\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/gitfinder'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/about'>About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Gitfinder',\r\n  icon: 'fa fa-home',\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ReposItem = ({ repo }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3><a href={repo.html_url}>{repo.name}</a></h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nReposItem.propTypes = {\r\n  repo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ReposItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReposItem from './ReposItem';\r\n\r\nconst Repos = ({ repos }) => {\r\n  return repos.map((repo) => <ReposItem key={repo.id} repo={repo} />);\r\n};\r\n\r\nRepos.propTypes = {\r\n  repos: PropTypes.array.isRequired,\r\n};\r\n\r\n\r\nexport default Repos;","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n const Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;","import { createContext } from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;\r\n","import React, { useEffect, Fragment, useContext } from 'react';\r\nimport Repos from '../repos/Repos';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n    hireable,\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <Fragment>\r\n      <Link to='/gitfinder' className='btn btn-light'>\r\n        Back to Search\r\n      </Link>\r\n\r\n      <div className='card grid-2'>\r\n        <div className='all-center'>\r\n          <img\r\n            src={avatar_url}\r\n            className='round-img'\r\n            alt='Avatar'\r\n            style={{ width: '150px' }}\r\n          />\r\n          <h1>{name}</h1>\r\n          <p>Location: {location}</p>\r\n          <p>Hireable: {''}</p>\r\n          {hireable ? (\r\n            <i className='fa fa-check text-success' />\r\n          ) : (\r\n            <i className='fa fa-times-circle text-danger' />\r\n          )}\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <Fragment>\r\n              <h2>Bio</h2>\r\n              {bio}\r\n            </Fragment>\r\n          )}\r\n          <hr></hr>\r\n          <a href={html_url} className='btn btn-dark my-1'>\r\n            Go to Git\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <Fragment>\r\n                  <strong>Username</strong>: {login}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {company && (\r\n                <Fragment>\r\n                  <strong>Company</strong>: {company}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {blog && (\r\n                <Fragment>\r\n                  <strong>Website</strong>: {blog}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className='card text-center'>\r\n        <div className='badge badge-primary'>Followers : {followers}</div>\r\n        <div className='badge badge-success'>Following : {following}</div>\r\n        <div className='badge badge-light'>Public Repos : {public_repos}</div>\r\n        <div className='badge badge-dark'>Public Gists : {public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;\r\n","import React, { useContext } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = () => {\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { alert } = alertContext;\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>{alert.msg}</div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserItem = ({ user: { login, html_url, avatar_url } }) => {\r\n  return (\r\n    <div className='card text-center'>\r\n      <img\r\n        src={avatar_url}\r\n        alt='User Logo'\r\n        className='round-img'\r\n        style={{ width: '60px' }}\r\n      />\r\n      <h3>{login}</h3>\r\n      <div>\r\n        <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>\r\n          Read More\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const { loading, users } = githubContext;\r\n  const userStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3,1fr)',\r\n    gridGap: '1rem',\r\n  };\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map((user) => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nUsers.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Users;\r\n","import React, { useState, useContext } from 'react';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = ({ showAlert }) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      alertContext.setAlert('Please Enter Value', 'light');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => setText(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          value={text}\r\n          onChange={handleChange}\r\n          placeholder='Search Here'\r\n        />\r\n        <button type='submit' className='btn btn-dark btn-block'>\r\n          Search...\r\n        </button>\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          className='btn btn-light btn-block mt-10'\r\n          onClick={githubContext.clearUsers}\r\n        >\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Fragment } from 'react';\r\nimport Users from '../users/Users';\r\nimport Search from '../users/Search';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <Search />\r\n      <Users />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react'\r\n\r\n const About = () =>{\r\n    return (\r\n        <div>\r\n                <h1 className='text-center'>This is about page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import {\r\n  SEARCH_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\n  SEARCH_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n} from '../types';\r\n\r\nconst GithubState = (props) => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n  //SEARCH_USER\r\n  const searchUsers = async (text) => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_CLIENT_ID}&client_secret=${process.env.REACT_APP_CLIENT_SECRET}`\r\n    );\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items,\r\n    });\r\n  };\r\n\r\n  //GET_USER\r\n  const getUser = async (username) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_CLIENT_ID}&client_secret=${process.env.REACT_APP_CLIENT_SECRET}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  //GET_REPOS\r\n  const getUserRepos = async (username) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_CLIENT_ID}&client_secret=${process.env.REACT_APP_CLIENT_SECRET}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  //CLEAR_USERS\r\n  const clearUsers = () =>\r\n    dispatch({\r\n      type: CLEAR_USERS,\r\n    });\r\n\r\n  //SET_LOADING\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        getUser,\r\n        getUserRepos,\r\n        clearUsers,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = (props) => {\r\n  const initialState = null;\r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  //Set alert\r\n  const setAlert = (msg, type) => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { msg, type },\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 4000);\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alert: state,\r\n        setAlert,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport User from './components/users/User';\r\nimport Alert from './components/layout/Alert';\r\nimport Home from './components/pages/Home';\r\nimport About from './components/pages/About';\r\n\r\nimport GithubState from './context/github/githubState';\r\nimport AlertState from './context/alert/AlertState';\r\n\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <GithubState>\r\n      <AlertState>\r\n        <Router>\r\n          <div className='App'>\r\n            <Navbar />\r\n            <div className='container'>\r\n              <Alert />\r\n              <Switch>\r\n                <Route exact path='/gitfinder' component={Home} />\r\n                <Route exact path='/about' component={About} />\r\n                <Route exact path='/user/:login' component={User} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </AlertState>\r\n    </GithubState>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}